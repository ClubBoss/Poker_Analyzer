name: Dart CLI
on:
  pull_request:
    branches: [ main ]
    paths: [ "bin/**", "lib/**", "test/ev/**", ".github/workflows/cli-dart.yml" ]
  push:
    branches: [ main ]
    paths: [ "bin/**", "lib/**", "test/ev/**", ".github/workflows/cli-dart.yml" ]

jobs:
  cli-dart:
    name: cli-dart
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with: { channel: stable, cache: true }

      - name: Cache Pub
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: pub-${{ runner.os }}-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            pub-${{ runner.os }}-

      - name: Pub get (Flutter)
        run: flutter pub get

      - name: ASCII gate (CLI only)
        shell: bash
        run: |
          FILES=$(git ls-files 'bin/**/*.dart' 'test/ev/**/*.dart' 2>/dev/null || true)
          if [ -z "$FILES" ]; then echo "No CLI files"; exit 0; fi
          if grep -I -n -E '[\x80-\xFF]|[–—…]' $FILES; then
            echo "::error title=ASCII gate::Non-ASCII/smart punctuation in CLI sources"
            exit 1
          fi

      - name: Analyze (bin)
        run: dart analyze bin --fatal-warnings

      - name: Analyze (CLI core)
        shell: bash
        run: |
          FILES=$(git ls-files \
            "bin/*.dart" "bin/ev_*.dart" \
            "lib/services/l3_cli_runner.dart" "lib/utils/push_fold.dart" 2>/dev/null | tr "\n" " ")
          if [ -z "$FILES" ]; then echo "No core files"; exit 0; fi
          dart analyze --fatal-warnings $FILES

      - name: Analyze (lib)
        continue-on-error: true
        run: dart analyze lib --fatal-warnings

      - name: dart format check
        run: dart format --output=none --set-exit-if-changed bin test/ev

      - name: Compile smoke (CLI)
        shell: bash
        run: |
          # pick a CLI entrypoint (no Flutter imports)
          pick_target() {
            for f in bin/ev_cli.dart bin/ev_enrich_jam_fold.dart bin/ev_rank_jam_fold_deltas.dart; do
              [ -f "$f" ] || continue
              if ! grep -qE 'package:flutter/|flutter_gen/' "$f"; then echo "$f"; return 0; fi
            done
            # fallback: first bin/*.dart without Flutter imports
            for f in bin/*.dart; do
              [ -f "$f" ] || continue
              if ! grep -qE 'package:flutter/|flutter_gen/' "$f"; then echo "$f"; return 0; fi
            done
            return 1
          }
          TARGET="$(pick_target || true)"
          if [ -z "$TARGET" ]; then
            echo "No pure CLI target found; skipping compile smoke."; exit 0
          fi
          echo "Compiling CLI target: $TARGET"
          dart compile exe "$TARGET" -o /tmp/cli_smoke

      - name: EV CLI tests (smoke)
        run: dart test -r expanded test/ev/_cli_help_smoke_test.dart test/ev/ev_rank_jam_fold_cli_test.dart
