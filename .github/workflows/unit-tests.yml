name: Unit tests

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
  workflow_dispatch:

jobs:
  unit:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter (for tooling + pub)
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Versions
        run: |
          flutter --version
          dart --version

      - name: Install dependencies
        run: flutter pub get

      # Берём только быстрые headless-наборы, которые НЕ требуют flutter_test
      - name: Detect pure-dart test dirs
        id: dirs
        shell: bash
        run: |
          set -euo pipefail
          DIRS=()
          [[ -d test/tools ]] && DIRS+=("test/tools")
          [[ -d test/headless ]] && DIRS+=("test/headless")
          if [[ ${#DIRS[@]} -eq 0 ]]; then
            echo "has_tests=0" >> "$GITHUB_OUTPUT"
          else
            printf '%s ' "${DIRS[@]}" > dirs.txt
            echo "has_tests=1" >> "$GITHUB_OUTPUT"
            echo "list=$(cat dirs.txt)" >> "$GITHUB_OUTPUT"
          fi

      - name: Run tests (Dart, compact)
        if: steps.dirs.outputs.has_tests == '1'
        shell: bash
        run: |
          # Запускаем как pure Dart, чтобы не триггерить валидацию плагинов Flutter.
          dart test -r compact ${{ steps.dirs.outputs.list }}

      - name: No pure-dart tests found
        if: steps.dirs.outputs.has_tests != '1'
        run: echo "No pure-dart test directories found. Skipping."
