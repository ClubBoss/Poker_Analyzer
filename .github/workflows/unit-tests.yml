name: unit-tests

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - '.github/workflows/**'
  push:
    branches: [main]
    paths-ignore:
      - '.github/workflows/**'

permissions:
  contents: read

concurrency:
  group: unit-tests-${{ github.sha }}
  cancel-in-progress: true

jobs:
  docs-lint:
    name: Docs lint (smart punctuation) — informational
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fail on smart quotes / punctuation in docs/**
        run: |
          python3 - <<'PY'
          import re, sys, subprocess, pathlib
          rx = re.compile(r'[\u2018\u2019\u201C\u201D\u2013\u2014\u2026]')  # ‘ ’ “ ” – — …
          # проверяем только документацию, чтобы не блокировать кодовые тесты
          res = subprocess.run(['git','ls-files','docs/**.md','docs/**/**.md'],
                               capture_output=True, text=True)
          files = [f for f in res.stdout.splitlines() if f]
          bad = False
          for f in files:
              p = pathlib.Path(f)
              if not p.exists(): 
                  continue
              txt = p.read_text(encoding='utf-8', errors='ignore')
              if rx.search(txt):
                  print(f"::group::Smart punctuation found in {f}")
                  for i, line in enumerate(txt.splitlines(), 1):
                      if rx.search(line):
                          print(f"{f}:{i}: {line}")
                  print("::endgroup::")
                  bad = True
          if bad:
              print("Smart punctuation found. Replace with ASCII equivalents.")
              sys.exit(1)
          PY

  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Flutter pub get
        run: flutter pub get

      - name: Analyze (informational)
        run: flutter analyze
        continue-on-error: true

      - name: Run unit tests
        run: flutter test --no-pub
