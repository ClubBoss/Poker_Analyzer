name: Codex Presubmit (format+analyze)

on:
  pull_request: {}   # all PRs; filter below by branch

permissions:
  contents: read

concurrency:
  group: presubmit-${{ github.event.pull_request.head.sha || github.sha }}
  cancel-in-progress: true

jobs:
  presubmit:
    if: ${{ startsWith(github.head_ref, 'codex/') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Cache Pub dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Pub get
        run: flutter pub get

      # Format check (scoped; skip lib/l10n/**)
      - name: Format check (scoped)
        run: dart format --output=none --set-exit-if-changed bin lib/l3 tool/l3 test/ev

      - name: Collect relevant Dart files
        id: collect
        shell: bash
        run: |
          FILES=$(git ls-files \
            'tool/**/*.dart' \
            'lib/services/**/*.dart' \
            'lib/l3/**/*.dart' \
            'test/l2_*.dart' \
            'test/l3_*.dart' \
            'test/l3_demo_*.dart' || true)
          echo "$FILES" > dart_files.txt
          if [ -s dart_files.txt ]; then
            echo "has_files=true" >> $GITHUB_OUTPUT
          else
            echo "has_files=false" >> $GITHUB_OUTPUT
          fi

      - name: Analyze (limited scope)
        if: steps.collect.outputs.has_files == 'true'
        continue-on-error: true
        shell: bash
        run: |
          xargs -a dart_files.txt flutter analyze --no-fatal-warnings --no-fatal-infos || true

      - name: Skip analyze (no relevant files)
        if: steps.collect.outputs.has_files != 'true'
        run: echo "No relevant Dart files to analyze."
