name: Codex Presubmit (format+analyze)

on:
  pull_request: {}   # берём все PR; фильтруем по head-ветке ниже

permissions:
  contents: write

concurrency:
  group: presubmit-${{ github.event.pull_request.head.sha || github.sha }}
  cancel-in-progress: true

jobs:
  presubmit:
    # Только PR из веток codex/*
    if: ${{ startsWith(github.head_ref, 'codex/') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Flutter (Dart toolchain)
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.27.0'
          cache: true

      - name: Autoformat Dart
        id: fmt
        run: |
          dart format -o write tool lib test || true
          if git diff --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit format (if needed)
        if: steps.fmt.outputs.changed == 'true'
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "style: dart format (autofix)"
          git push

      # Анализируем ТОЛЬКО релевантные файлы и не «красним» PR
      - name: Collect relevant Dart files
        id: collect
        shell: bash
        run: |
          FILES=$(git ls-files \
            'tool/**/*.dart' \
            'lib/services/**/*.dart' \
            'lib/l3/**/*.dart' \
            'test/l2_*.dart' \
            'test/l3_*.dart' \
            'test/l3_demo_*.dart' || true)
          echo "$FILES" > dart_files.txt
          if [ -s dart_files.txt ]; then
            echo "has_files=true" >> $GITHUB_OUTPUT
          else
            echo "has_files=false" >> $GITHUB_OUTPUT
          fi

      - name: Dart analyze (limited scope)
        if: steps.collect.outputs.has_files == 'true'
        continue-on-error: true
        shell: bash
        run: |
          xargs -a dart_files.txt dart analyze --no-fatal-warnings --no-fatal-infos || true

      - name: Skip analyze (no relevant files)
        if: steps.collect.outputs.has_files != 'true'
        run: echo "No relevant Dart files to analyze."
