import 'package:uuid/uuid.dart';

import '../core/training/generation/training_spot_expander.dart';
import '../models/v2/training_pack_template_v2.dart';

class PackAugmentationEngine {
  final TrainingSpotExpander expander;
  final Uuid _uuid;

  PackAugmentationEngine({TrainingSpotExpander? expander, Uuid? uuid})
    : expander = expander ?? const TrainingSpotExpander(),
      _uuid = uuid ?? const Uuid();

  /// Returns the original list combined with auto generated packs that contain
  /// expanded spots for additional training variety.
  List<TrainingPackTemplateV2> augment(List<TrainingPackTemplateV2> packs) {
    final result = <TrainingPackTemplateV2>[...packs];
    for (final p in packs) {
      var extended = expander.expandPack(p);
      final map = extended.toJson();
      map['id'] = _uuid.v4();
      map['name'] = '${p.name} (Extended)';
      final tags = <String>{...extended.tags, 'autoGenerated'};
      map['tags'] = tags.toList();
      map['spotCount'] = extended.spots.length;
      extended = TrainingPackTemplateV2.fromJson(
        Map<String, dynamic>.from(map),
      );
      for (final s in extended.spots) {
        s.meta['variation'] = true;
      }
      extended.isGeneratedPack = true;
      result.add(extended);
    }
    return result;
  }
}
